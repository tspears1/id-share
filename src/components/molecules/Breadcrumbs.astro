---
const { items } = Astro.props;
---
{ items && items?.length > 0 &&
   <nav class="breadcrumbs">
      <ul class="breadcrumbs__list">
         { items.map((item) => (
            <>
               { item.url &&
                  <li class="breadcrumbs__item">
                     <a href={item.url} class="breadcrumbs__link">
                        <span class="breadcrumbs__link-label">{item.label}</span>
                     </a>
                  </li>
                  <li class="breadcrumbs__separator">
                     { '/' }
                  </li>
               }
               { !item.url &&
                  <li class="breadcrumbs__item">
                     <span class="breadcrumbs__link">
                        <span class="breadcrumbs__link-label">{item.label}</span>
                     </span>
                  </li>
               }
            </l>
         ))}
      </ul>
   </nav>
}

<style>
   .breadcrumbs {
      align-items: center;
      display: flex;
      flex-wrap: wrap;
      gap: var(--size-fluid-3);
      justify-content: space-between;
      padding-block: var(--size-fluid-3);
      padding-inline: 0;
   }
   .breadcrumbs__list {
      display: flex;
      flex-wrap: wrap;
      gap: var(--size-fluid-1);
      list-style: none;
      padding-inline-start: 0;
   }
   .breadcrumbs__item {
      display: flex;
      font-size: var(--font-size-sm);
      font-weight: var(--font-weight-semibold);
      flex-wrap: wrap;
      gap: var(--size-fluid-1);
      letter-spacing: var(--tracking-wider);
   }
   .breadcrumbs__link {
      color: hsl(var(--color-text-3));
      display: flex;
      flex-wrap: wrap;
      gap: var(--size-fluid-1);
      transition: color var(--duration-fast) var(--ease-out-3);

      &:where(a):where(:hover, :focus-within) {
         color: hsl(var(--color-syntax-string));
      }
   }
</style>
